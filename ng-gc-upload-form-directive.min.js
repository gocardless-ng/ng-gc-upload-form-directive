!function(){"use strict";angular.module("gc-upload-form-template.html",[]).run(["$templateCache",function(a){a.put("gc-upload-form-template.html",'<div><form action="{{formAction}}" name="uploadForm" novalidate="" stop-propagation="submit" gc-upload="{\n      onUploadEnd: handleUploadEnd\n    }"><div class="well u-margin-Txxs u-padding-Axs"><input type="file" name="file" ng-model="file" accept="{{ fileAccept }}" gc-file-value=""><div ng-transclude=""></div><div ng-show="uploadErrors"><p ng-repeat="fileError in uploadErrors" class="u-text-primary u-text-h6 u-margin-Txxs">{{ fileError }}</p></div></div><div class="u-margin-Ts"><button class="btn btn--info" ng-class="{\n          \'btn--block\': !isInlineUpload,\n          \'btn--small\': isInlineUpload\n        }" id="fileUploadBtn" ng-disabled="uploadForm.$pristine || !uploadForm.file.$viewValue || $isUploading"><span>Upload<span ng-show="$isUploading">ing...</span></span></button></div></form></div>')}]),angular.module("gc.uploadFormController",[]).controller("GcUploadFormController",["$scope",function(a){function b(a){if(a){var b=a.error||a.errors;if(null!=b)return _.isObject(b)?_.uniq(_.flatten(_.values(b))):[b]}}a.handleUploadEnd=function(c){a.uploadErrors=b(c),a.onUploadEnd({errors:a.uploadErrors,response:c})}}]),angular.module("gc.uploadForm",["gcUpload","gc.file","gc.stopPropagation","gc.uploadFormController","gc-upload-form-template.html"]).directive("gcUploadForm",[function(){return{restrict:"E",replace:!0,transclude:!0,controller:"GcUploadFormController",templateUrl:"gc-upload-form-template.html",scope:{formAction:"@",fileAccept:"@",isInlineUpload:"@",onUploadEnd:"&"}}}])}();